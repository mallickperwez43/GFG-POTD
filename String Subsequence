const int mod = 1e9 + 7;

class Solution {
  private:
    int solve(string a, string b, int i, int j, vector<vector<int>> &dp){
        if(j == b.length()) return 1;
        if(i == a.length()) return 0;
        
        if(dp[i][j] != -1) return dp[i][j];
        
        int pick = 0, nonPick = 0;
        
        if(a[i] == b[j]){
            pick = solve(a, b, i + 1, j + 1, dp);
        }
        nonPick = solve(a, b, i + 1, j, dp);
        
        return dp[i][j] = (pick + nonPick) % mod;
    }
  public:
    int countWays(string s1, string s2) {
        // code here
        int n = s1.length(), m = s2.length();
        vector<vector<int>> dp(n, vector<int>(m,-1));
        return solve(s1, s2, 0, 0, dp);
    }
};

// TC : O(n * m)
// SC : O(n * m)
