/*
struct Node {
    int data;
    Node* left;
    Node* right;

    Node(int val)
        : data(val)
        , left(nullptr)
        , right(nullptr) {}
};
*/

class Solution {
  public:
    Node* buildBST(vector<int> &nums, int start, int end){
        if(start > end) return NULL;
        
        int mid = (start + end) / 2;
        Node *rt = new Node(nums[mid]);
        rt -> left = buildBST(nums, start, mid - 1);
        rt -> right = buildBST(nums, mid + 1, end);
        
        return rt;
    }
    Node* sortedArrayToBST(vector<int>& nums) {
        // Code here
        Node *root = buildBST(nums, 0, nums.size() - 1);
        return root;
    }
};
