class Solution {
  public:
    // Function to find the majority elements in the array
    vector<int> findMajority(vector<int>& nums) {
        // Your code goes here.
        
        int n = nums.size();
        int candidate1 = INT_MIN, candidate2 = INT_MIN;
        int counter1 = 0, counter2 = 0;
        
        // Boyer-Moore Voting Algorithm to find potential candidates
        for(int i = 0; i < n; i++){
            if(nums[i] == candidate1){
                counter1++;
            }
            else if(nums[i] == candidate2){
                counter2++;
            }
            else if(counter1 == 0){ // set new candidate
                candidate1 = nums[i];
                counter1 = 1;
            }
            else if(counter2 == 0){ // set new candidate
                candidate2 = nums[i];
                counter2 = 1;
            }
            else{ // no match found
                counter1--;
                counter2--;
            }
        }
        
        // Verify candidates by actual vote
        int vote1 = 0, vote2 = 0;
        for(int num : nums){
            if(num == candidate1){
                vote1++;
            }
            else if(num == candidate2){
                vote2++;
            }
        }
        
        vector<int> ans;
        if(vote1 > n / 3) ans.push_back(candidate1);
        if(vote2 > n / 3) ans.push_back(candidate2);
        
        sort(ans.begin(), ans.end());
        
        if(ans.empty()) ans.push_back(-1);
        
        return ans;
    }
};
