class Solution {
  public:
    int solve(int i, int k, vector<int>& arr, vector<int>& dp){
        if(i == arr.size() - 1){
            return 0; 
        } 
        
        if(dp[i] != -1){
            return dp[i];
        }
        
        int ans = INT_MAX;
        
        // check every possible k element
        for(int j = i + 1; j < i + k + 1 && j < arr.size(); j++){
            int cost = abs(arr[i] - arr[j]) + solve(j, k, arr, dp);
            ans = min(ans, cost);
        }
        
        return dp[i] = ans;
    }
    int minimizeCost(int k, vector<int>& arr) {
        // Code here
        vector<int> dp(arr.size(), -1);
        return solve(0, k, arr, dp);
    }
};

// TC : O(n * k)
// SC : O(n)
