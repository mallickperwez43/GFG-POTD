/*You are required to complete this method */

class Solution{
  public:
    vector<int> matrixDiagonally(vector<vector<int>>&mat)
    {
         //Your code here 
        int n = mat.size();
        if(n == 1) return mat[0];
        vector<int> ans(n * n);
        int count = 0;
        int row = 0; 
        int col = 0;
        // Traverse through the matrix diagonally
        while(row < n and col < n and count < (n * n)){
            ans[count] = mat[row][col];
            ++count;
            // If sum of row and col index is even, move up-right
            if(!((row + col) & 1)){
                row--;
                col++;
                // Boundary conditions for column
                if(col == n){
                    row += 2;
                    col--;
                }
                // Boundary conditions for row
                if(row == -1) row++;
            }
            // If sum of row and col index is odd, move down-left
            else{
                row++;
                col--;
                // Boundary conditions for row
                if(row == n){
                    row--;
                    col += 2;
                }
                // Boundary conditions for column
                if(col == -1) col++;
            }
        }
        return ans;
    }
};
