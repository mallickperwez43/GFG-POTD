class Solution {
  public:
    long long maxTip(int n, int x, int y, vector<int> &arr, vector<int> &brr) {
        // code here
        
        // store the diff of every element with their indexes
        vector<pair<int, int>> diffToIndex;
        for(int i = 0; i < n; i++){
            diffToIndex.push_back(make_pair(abs(arr[i] - brr[i]), i));
        }
        
        // sort the diffToIndex array
        sort(diffToIndex.begin(), diffToIndex.end());
        
        // iterate over the array and get the maximum tip
        long long ans = 0;
        for(int i = n - 1; i >= 0; i--){
            int index = diffToIndex[i].second; // get index
            if(arr[index] > brr[index]){
                if(x){
                    ans += arr[index];
                    x--;
                }
                else{
                    ans += brr[index];
                    y--;
                }
            }
            else{
                if(y){
                    ans += brr[index];
                    y--;
                }
                else{
                    ans += arr[index];
                    x--;
                }
            }
        }
        
        return ans;
    }
};

// TC : O(nlogn)
// SC : O(n)
