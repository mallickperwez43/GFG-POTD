class Solution {
  public:
    string helper(Node* root, unordered_map<string, int>& storeDup, vector<Node*>& ans){
        // base case
        if(root == NULL) return "#";
        
        string temp;
        temp += to_string(root -> data) + ' ';
        temp += helper(root -> left, storeDup, ans) + ' ';
        temp += helper(root -> right, storeDup, ans);
        
        // if a duplicate is found store it once
        if(storeDup[temp] == 1){
            ans.push_back(root);
        }
        
        storeDup[temp]++;
        
        return temp;
    }
    
    vector<Node*> printAllDups(Node* root) {
        // Code here
        vector<Node*> ans;
        unordered_map<string, int> storeDup;
        
        helper(root, storeDup, ans);
        
        return ans;
    }
};
