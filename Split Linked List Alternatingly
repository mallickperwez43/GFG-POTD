/*
struct Node
{
    int data;
    struct Node* next;

    Node(int x){
        data = x;
        next = NULL;
    }

};
*/

class Solution {
  public:
    // Function to split a linked list into two lists alternately
    vector<Node*> alternatingSplitList(struct Node* head) {
        // Your code here
        Node* head1 = NULL;
        Node* head2 = NULL;
        Node* temp1 = NULL;
        Node* temp2 = NULL;
        int count   = 0;
        
        while(head){
            if(count & 1){ // odd -> head2
                if(head2 == NULL){
                    head2 = head;
                    temp2 = head;
                }
                else{
                    temp2 -> next = head;
                    temp2 = temp2 -> next;
                }
            }
            else{ // even -> head1
                if(head1 == NULL){
                    head1 = head;
                    temp1 = head;
                }
                else{
                    temp1 -> next = head;
                    temp1 = temp1 -> next;
                }
            }
            head = head -> next;
            count++;
        }
        
        temp1 -> next = NULL;
        temp2 -> next = NULL;
        
        return {head1, head2};
    }
};
