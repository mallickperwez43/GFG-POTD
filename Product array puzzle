// User function template for C++

class Solution {
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums) {

        // code here
        long long int temp = 1;
        long long int countZeros = 0;
        long long int index = -1;
        long long int n = nums.size();
        
        for(int i = 0; i < n; i++){
            if(nums[i] != 0){
                temp *= nums[i];
            }
            else{
                countZeros++;
                index = i;
            }
        }
        
        vector<long long int> ans(n, 0);
        if(countZeros > 1) return ans; // multiple zeros
        if(countZeros == 1){ // single zero
            ans[index] = temp;
            return ans;
        } 
        
        // general
        for(int i = 0; i < n ; i++){
            ans[i] = temp / nums[i];
        }
        
        return ans;
    }
};
