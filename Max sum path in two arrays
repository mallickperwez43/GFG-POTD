class Solution {
  public:
    int maxPathSum(vector<int> &arr1, vector<int> &arr2) {
        // Code here
        int n1 = arr1.size();
        int n2 = arr2.size();
        int i = n1 - 1;
        int j = n2 - 1;
        int sum1 = 0; 
        int sum2 = 0; 
        
        while(i >= 0 && j >= 0){
            if(arr1[i] > arr2[j]){
                sum1 += arr1[i--];
            }
            if(arr1[i] < arr2[j]){
                sum2 += arr2[j--];
            }
            if(arr1[i] == arr2[j]){ // maximize
                if(sum1 > sum2){
                    sum1 += arr1[i];
                    sum2 = sum1;
                }
                else{
                    sum2 += arr2[j];
                    sum1 = sum2;
                }
                //comman
                i--;
                j--;
            }
        }
        
        while(i >= 0){
            sum1 += arr1[i--];
        }
        
        while(j >= 0){
            sum2 += arr2[j--];
        }
        
        return max(sum1, sum2);
    }
};
