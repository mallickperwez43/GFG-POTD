class Solution {

  public:
    int findMinCost(string x, string y, int costX, int costY) {
        // Your code goes here
        int n = x.length(), m = y.length();
        int dp[n + 1][m + 1];
        
        // fill first row and col with zero
        for(int i = 0; i <= n; i++){
            dp[i][0] = 0;
        }
        
        for(int i = 0; i <= m; i++){
            dp[0][i] = 0;
        }
        
        for(int i = 1; i <= n; i++){
            for(int j = 1; j <= m; j++){
                // matches
                if(x[i - 1] == y[j - 1])
                    dp[i][j] = 1 + dp[i - 1][j - 1];
                else // no macthes
                    dp[i][j] = max(dp[i][j - 1], dp[i - 1][j]);
            }
        }
        
        return (n - dp[n][m]) * costX + (m - dp[n][m]) * costY;
    }
};


// TC : O(n * m)
// SC : O(n * m)
