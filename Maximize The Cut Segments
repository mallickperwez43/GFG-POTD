class Solution
{
    public:
    int helper(int n, int x, int y, int z, vector<int> &dp){
        if(n < 0) return INT_MIN;
        if(n == 0) return 0;
        if(dp[n] != -1) return dp[n];        
        
        return dp[n] = 1 + max({helper(n - x, x, y , z, dp), helper(n - y, x, y, z, dp), helper(n - z, x, y, z, dp)}); 
    }
    //Function to find the maximum number of cuts.
    int maximizeTheCuts(int n, int x, int y, int z)
    {
        //Your code here
        vector<int> dp(n + 1, -1);
        
        int ans = helper(n, x, y, z, dp);
        
        return ans < 0 ? 0 : ans;
    }
};
