class Solution {
  public:
    int maxSquare(int n, int m, vector<vector<int>> mat) {
        // code here
        int dp[n][m];
        int ans = 0;
        
        // fill the 0th row same as the mat
        for(int i = 0; i < m; i++){
            dp[0][i] = mat[0][i];
            ans = max(ans, dp[0][i]);
            
        }
        
        // fill the 0th col same as the mat
        for(int j = 0; j < n; j++){
            dp[j][0] = mat[j][0]; 
            ans = max(ans, dp[j][0]);
        }
        
        // iterate from 1st row and first col and check the 3 points 
        // up , left and dia
        for(int i = 1; i < n; i++){
            for(int j = 1; j < m; j++){
                if(mat[i][j]){
                    dp[i][j] = min({dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1]}) + 1;
                }
                else{
                    dp[i][j] = 0;
                }
                ans = max(ans, dp[i][j]);
            }
        }
        
        return ans;
    }
};

// TC : O(n * m)
// SC : O(n * m)
