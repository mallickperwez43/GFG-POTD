/*
struct Node {
    int data;
    struct Node *next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};

*/

class Solution {
  public:
    // Function to rotate a linked list.
    Node* rotate(Node* head, int k) {
        // Your code here
        if(head == NULL || k == 0){
            return head;
        }
        
        // get the length of the LL
        Node* cur = head;
        int len = 1;
        while(cur -> next != NULL){
            cur = cur -> next;
            len++;
        }
        
        
        if(k > len){
            return head;
        }
        
        // make circular LL
        Node* headPtr = head;
        cur -> next = head;
        
        // find node just before the new head
        int count = 0;
        while(count < k - 1){
            headPtr = headPtr -> next;
            count++;
        }
        
        // make new head
        Node* newHead = headPtr -> next;
        headPtr -> next = NULL; // break the cirular condition
        
        return newHead;
    }
};
