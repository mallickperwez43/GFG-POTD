// User function template for C++

// arr : given vector of elements
// target : given sum value

class Solution {
  public:
    int threeSumClosest(vector<int> arr, int target) {
        // Your code goes here
        int diff = INT_MAX, ans = 0, size = arr.size();
        
        // sort the array 
        sort(arr.begin(), arr.end());
        
        // two pointer for second loop
        for(int i = 0; i < size - 2; i++){
            int j = i + 1, k = size - 1;
            while(j < k){
                // get the cur sum and d(diff)
                int sum = arr[i] + arr[j] + arr[k];
                int d = abs(sum - target);
                
                // if a closer value found update diff and ans  
                if(d < diff){
                    diff = d;
                    ans = sum;
                }
                else if(d == diff){
                    // same diff -> ans maximise
                    ans = max(ans, sum);
                }
                // move pointers
                if(sum < target) j++;
                else if(sum == target) return sum;
                else k--;
            }
        }
        
        return ans;
    }
};

// TC : O(n * n)
// SC : O(1)
