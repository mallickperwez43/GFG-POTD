class Solution {
  public:
    // U R D L 
    int dirX[4] = {0, 1, 0, -1};
    int dirY[4] = {1, 0, -1, 0};
    
    bool isSafe(int i, int j, vector<vector<int>>& matrix){
        int n = matrix.size(), m = matrix[0].size();
        
        if(i < 0 or i >= n or j < 0 or j >= m or matrix[i][j] != 1){
            return false;
        }
        return true;
    }
    
    int findCoverage(vector<vector<int>>& matrix) {
        // Code here
        int row = matrix.size(), col = matrix[0].size(), coverage = 0;
        
        for(int i = 0; i < row; i++){
            for(int j = 0; j < col; j++){
                if(matrix[i][j] == 0){
                    for(int k = 0; k < 4; k++){
                        int newRow = i + dirX[k];
                        int newCol = j + dirY[k];
                    
                        if(isSafe(newRow, newCol, matrix)){
                            coverage++;
                        }
                    }
                }
            }
        }
        
        return coverage;
    }
};

// TC : O(n * m)
// SC : O(1)
