class Solution {
  public:
    int minimumCost(int n, int w, vector<int> &cost) {
        // code here
        vector<int> dp(w + 1, INT_MAX);
        dp[0] = 0;
        
        // try for every element 
        for(int i = 0; i < n; i++){
            // if can buy
            if(cost[i] != -1){
                // try for all weights from i + 1 to w
                for(int j = i + 1; j <= w; j++){
                    // min of existing one or cur cost +_ whats weight left to make w 
                    dp[j] = min(dp[j], cost[i] + dp[j - i - 1]);
                }
            }
        }
        
        return dp[w] == INT_MAX ? -1 : dp[w]; 
    }
};

// TC : O(n* w)
// SC : O(w)
